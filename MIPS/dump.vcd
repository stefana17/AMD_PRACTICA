$date
	Fri Jul 14 08:20:12 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$var wire 3 ! ALUControl [2:0] $end
$var wire 2 " ALUOp [1:0] $end
$var wire 32 # ALUResult [31:0] $end
$var wire 1 $ ALUSrc $end
$var wire 1 % Branch $end
$var wire 1 & Jump $end
$var wire 1 ' MemRead $end
$var wire 1 ( MemWrite $end
$var wire 1 ) MemtoReg $end
$var wire 32 * PCnew [31:0] $end
$var wire 32 + PCnew4 [31:0] $end
$var wire 1 , RegDst $end
$var wire 1 - RegWrite $end
$var wire 32 . addout [31:0] $end
$var wire 1 / clk $end
$var wire 32 0 instrExt [31:0] $end
$var wire 32 1 instruction [31:0] $end
$var wire 32 2 muxoutMem [31:0] $end
$var wire 32 3 muxoutPC [31:0] $end
$var wire 32 4 muxoutPC1 [31:0] $end
$var wire 32 5 muxoutPC2 [31:0] $end
$var wire 32 6 muxoutReg [31:0] $end
$var wire 5 7 muxoutWriteReg [4:0] $end
$var wire 32 8 outshiftAdd [31:0] $end
$var wire 32 9 outshiftinstr [31:0] $end
$var wire 32 : readData [31:0] $end
$var wire 32 ; readData1 [31:0] $end
$var wire 32 < readData2 [31:0] $end
$var wire 1 = start $end
$var wire 1 > zero $end
$scope module Mux2_1_instStart $end
$var wire 32 ? dataout [31:0] $end
$var wire 32 @ di0 [31:0] $end
$var wire 32 A di1 [31:0] $end
$var wire 1 = sel $end
$upscope $end
$scope module PC_inst $end
$var wire 32 B PC [31:0] $end
$var wire 1 / clk $end
$var reg 32 C PCnew [31:0] $end
$upscope $end
$scope module ALUAdd_instPC $end
$var wire 32 D din1 [31:0] $end
$var wire 32 E din2 [31:0] $end
$var reg 32 F addout [31:0] $end
$upscope $end
$scope module ALUAdd_inst $end
$var wire 32 G din1 [31:0] $end
$var wire 32 H din2 [31:0] $end
$var reg 32 I addout [31:0] $end
$upscope $end
$scope module Mux2_1_instPC1 $end
$var wire 32 J dataout [31:0] $end
$var wire 32 K di0 [31:0] $end
$var wire 32 L di1 [31:0] $end
$var wire 1 M sel $end
$upscope $end
$scope module Mux2_1_instPC2 $end
$var wire 32 N dataout [31:0] $end
$var wire 32 O di0 [31:0] $end
$var wire 32 P di1 [31:0] $end
$var wire 1 & sel $end
$upscope $end
$scope module Shift_Left_instPC $end
$var wire 32 Q in0 [31:0] $end
$var wire 32 R out [31:0] $end
$upscope $end
$scope module Shift_Left_instAdd $end
$var wire 32 S in0 [31:0] $end
$var wire 32 T out [31:0] $end
$upscope $end
$scope module InstructionMemory_inst $end
$var wire 32 U address [31:0] $end
$var wire 32 V instruction [31:0] $end
$upscope $end
$scope module Mux2_1_instReg $end
$var wire 5 W dataout [4:0] $end
$var wire 5 X di0 [4:0] $end
$var wire 5 Y di1 [4:0] $end
$var wire 1 , sel $end
$upscope $end
$scope module RegisterFile_inst $end
$var wire 1 / clk $end
$var wire 5 Z readRegister1 [4:0] $end
$var wire 5 [ readRegister2 [4:0] $end
$var wire 1 - we $end
$var wire 32 \ writeData [31:0] $end
$var wire 5 ] writeRegister [4:0] $end
$var integer 32 ^ i [31:0] $end
$var reg 32 _ readData1 [31:0] $end
$var reg 32 ` readData2 [31:0] $end
$upscope $end
$scope module UnitControl_inst $end
$var wire 6 a opcode [31:26] $end
$var reg 2 b ALUOp [1:0] $end
$var reg 1 c ALUSrc $end
$var reg 1 d Branch $end
$var reg 1 e Jump $end
$var reg 1 f MemRead $end
$var reg 1 g MemWrite $end
$var reg 1 h MemtoReg $end
$var reg 1 i RegDst $end
$var reg 1 j RegWrite $end
$upscope $end
$scope module Mux2_1_instALU $end
$var wire 32 k dataout [31:0] $end
$var wire 32 l di0 [31:0] $end
$var wire 32 m di1 [31:0] $end
$var wire 1 $ sel $end
$upscope $end
$scope module SignExtend_inst $end
$var wire 16 n instr [15:0] $end
$var wire 32 o instrExt [31:0] $end
$upscope $end
$scope module ALU_inst $end
$var wire 3 p ALUControl [2:0] $end
$var wire 32 q SrcA [31:0] $end
$var wire 32 r SrcB [31:0] $end
$var wire 1 > zero $end
$var reg 32 s ALUResult [31:0] $end
$upscope $end
$scope module ALUControl_inst $end
$var wire 2 t ALUOp [1:0] $end
$var wire 6 u InstrFunct [5:0] $end
$var reg 3 v ALUControl [2:0] $end
$upscope $end
$scope module DataMemory_inst $end
$var wire 32 w address [31:0] $end
$var wire 1 / clk $end
$var wire 32 x readData [31:0] $end
$var wire 1 ( we $end
$var wire 32 y writeData [31:0] $end
$var integer 32 z i [31:0] $end
$upscope $end
$scope module Mux2_1_instMem $end
$var wire 32 { dataout [31:0] $end
$var wire 32 | di0 [31:0] $end
$var wire 32 } di1 [31:0] $end
$var wire 1 ) sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 ~ \regIn[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 !" \regIn[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 "" \regIn[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 #" \regIn[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 $" \regIn[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 %" \regIn[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 &" \regIn[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 '" \regIn[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 (" \regIn[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 )" \regIn[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 *" \regIn[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 +" \regIn[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 ," \regIn[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 -" \regIn[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 ." \regIn[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 /" \regIn[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 0" \regIn[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 1" \regIn[17] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 2" \regIn[18] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 3" \regIn[19] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 4" \regIn[20] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 5" \regIn[21] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 6" \regIn[22] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 7" \regIn[23] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 8" \regIn[24] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 9" \regIn[25] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 :" \regIn[26] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 ;" \regIn[27] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 <" \regIn[28] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 =" \regIn[29] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 >" \regIn[30] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module RegisterFile_inst $end
$var reg 32 ?" \regIn[31] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 @" \RAM[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 A" \RAM[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 B" \RAM[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 C" \RAM[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 D" \RAM[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 E" \RAM[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 F" \RAM[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 G" \RAM[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 H" \RAM[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 I" \RAM[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 J" \RAM[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 K" \RAM[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 L" \RAM[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 M" \RAM[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 N" \RAM[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 O" \RAM[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 P" \RAM[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 Q" \RAM[17] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 R" \RAM[18] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 S" \RAM[19] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 T" \RAM[20] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 U" \RAM[21] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 V" \RAM[22] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 W" \RAM[23] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 X" \RAM[24] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 Y" \RAM[25] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 Z" \RAM[26] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 [" \RAM[27] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 \" \RAM[28] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 ]" \RAM[29] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 ^" \RAM[30] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module test_MIPS $end
$scope module MIPS_inst $end
$scope module DataMemory_inst $end
$var reg 32 _" \RAM[31] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 _"
b0 ^"
b0 ]"
b0 \"
b0 ["
b0 Z"
b0 Y"
b0 X"
b0 W"
b0 V"
b0 U"
b0 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b0 N"
b0 M"
b0 L"
b0 K"
b0 J"
b0 I"
b0 H"
b0 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
bx }
bx |
bx {
b100000 z
bx y
bx x
bx w
b10 v
bx u
b10 t
bx s
bx r
bx q
b10 p
bx o
bx n
bx m
bx l
bx k
1j
1i
0h
0g
xf
0e
0d
0c
b10 b
bx a
bx `
bx _
b100000 ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx00 T
bx S
b0xxxxxxxxxxxxxxxxxxxxxxxxxx00 R
b0xxxxxxxxxxxxxxxxxxxxxxxxxx Q
bx00 P
bx O
bx N
0M
bx L
bx K
bx J
bx I
bx00 H
bx G
bx F
b100 E
bx D
bx C
b0 B
b0 A
bx @
b0 ?
x>
1=
bx <
bx ;
bx :
b0xxxxxxxxxxxxxxxxxxxxxxxxxx00 9
bx00 8
bx 7
bx 6
bx 5
bx 4
b0 3
bx 2
bx 1
bx 0
0/
bx .
1-
1,
bx +
bx *
0)
0(
x'
0&
0%
0$
bx #
b10 "
b10 !
$end
#5
b101 2
b101 \
b101 {
b101 s
0>
b0 :
b0 x
b0 }
b101 #
b101 w
b101 |
b11000 I
b11000 .
b11000 L
b101 6
b101 k
b101 r
b10100 8
b10100 H
b10100 T
b0 b
b0 "
b0 t
1c
1$
0i
0,
b0 `
b0 <
b0 l
b0 y
b0 _
b0 ;
b0 q
b10 7
b10 W
b10 ]
b10000000000000010100 9
b10000000000000010100 R
b100 5
b100 @
b100 N
b101 u
b101 0
b101 S
b101 m
b101 o
b101 n
b1000 a
b10 [
b0 Z
b0 Y
b10 X
b100000000000000101 Q
b100 4
b100 J
b100 O
b10000000000000010100 P
b100000000000100000000000000101 1
b100000000000100000000000000101 V
b100 F
b100 +
b100 G
b100 K
b0 C
b0 *
b0 D
b0 U
1/
#10
b101 ""
b100 3
b100 ?
b100 B
0/
0=
#15
b1100 2
b1100 \
b1100 {
b1100 s
b1100 #
b1100 w
b1100 |
b11000000000000110000 P
b1000 3
b1000 ?
b1000 B
b110000 8
b110000 H
b110000 T
b1100 6
b1100 k
b1100 r
b11 7
b11 W
b11 ]
b11000000000000110000 9
b11000000000000110000 R
b1000 5
b1000 @
b1000 N
b1100 u
b1100 0
b1100 S
b1100 m
b1100 o
b1100 n
b11 [
b11 X
b110000000000001100 Q
b1000 4
b1000 J
b1000 O
b111000 I
b111000 .
b111000 L
b100000000000110000000000001100 1
b100000000000110000000000001100 V
b1000 F
b1000 +
b1000 G
b1000 K
b100 C
b100 *
b100 D
b100 U
1/
#20
b1100 #"
0/
#25
b11 2
b11 \
b11 {
b11 s
b11 #
b11 w
b11 |
b1100111111111111111011100 P
b1100 3
b1100 ?
b1100 B
b11111111111111111111111111011100 8
b11111111111111111111111111011100 H
b11111111111111111111111111011100 T
b11111111111111111111111111110111 6
b11111111111111111111111111110111 k
b11111111111111111111111111110111 r
b1100 _
b1100 ;
b1100 q
b111 7
b111 W
b111 ]
b1100111111111111111011100 9
b1100111111111111111011100 R
b1100 5
b1100 @
b1100 N
b110111 u
b11111111111111111111111111110111 0
b11111111111111111111111111110111 S
b11111111111111111111111111110111 m
b11111111111111111111111111110111 o
b1111111111110111 n
b111 [
b11 Z
b11111 Y
b111 X
b11001111111111111110111 Q
b1100 4
b1100 J
b1100 O
b11111111111111111111111111101000 I
b11111111111111111111111111101000 .
b11111111111111111111111111101000 L
b100000011001111111111111110111 1
b100000011001111111111111110111 V
b1100 F
b1100 +
b1100 G
b1100 K
b1000 C
b1000 *
b1000 D
b1000 U
1/
#30
b11 '"
0/
#35
b111 2
b111 \
b111 {
b111 s
b111 #
b111 w
b111 |
b11100010001000000010010100 P
b10000 3
b10000 ?
b10000 B
b1 v
b1 !
b1 p
b1000000010010100 8
b1000000010010100 H
b1000000010010100 T
b101 6
b101 k
b101 r
b10 b
b10 "
b10 t
0c
0$
1i
1,
b101 `
b101 <
b101 l
b101 y
b11 _
b11 ;
b11 q
b100 7
b100 W
b100 ]
b11100010001000000010010100 9
b11100010001000000010010100 R
b10000 5
b10000 @
b10000 N
b100101 u
b10000000100101 0
b10000000100101 S
b10000000100101 m
b10000000100101 o
b10000000100101 n
b0 a
b10 [
b111 Z
b100 Y
b10 X
b111000100010000000100101 Q
b10000 4
b10000 J
b10000 O
b1000000010100100 I
b1000000010100100 .
b1000000010100100 L
b111000100010000000100101 1
b111000100010000000100101 V
b10000 F
b10000 +
b10000 G
b10000 K
b1100 C
b1100 *
b1100 D
b1100 U
1/
#40
b111 $"
0/
#45
b100 2
b100 \
b100 {
b111 6
b111 k
b111 r
b100 s
b100 #
b100 w
b100 |
b1100100001010000010010000 P
b10100 3
b10100 ?
b10100 B
b0 v
b0 !
b0 p
b1010000010010000 8
b1010000010010000 H
b1010000010010000 T
b111 `
b111 <
b111 l
b111 y
b1100 _
b1100 ;
b1100 q
b101 7
b101 W
b101 ]
b1100100001010000010010000 9
b1100100001010000010010000 R
b10100 5
b10100 @
b10100 N
b100100 u
b10100000100100 0
b10100000100100 S
b10100000100100 m
b10100000100100 o
b10100000100100 n
b100 [
b11 Z
b101 Y
b100 X
b11001000010100000100100 Q
b10100 4
b10100 J
b10100 O
b1010000010100100 I
b1010000010100100 .
b1010000010100100 L
b11001000010100000100100 1
b11001000010100000100100 V
b10100 F
b10100 +
b10100 G
b10100 K
b10000 C
b10000 *
b10000 D
b10000 U
1/
#50
b100 %"
0/
#55
b1011 2
b1011 \
b1011 {
b1011 s
b1011 #
b1011 w
b1011 |
b10100100001010000010000000 P
b11000 3
b11000 ?
b11000 B
b10 v
b10 !
b10 p
b1010000010000000 8
b1010000010000000 H
b1010000010000000 T
b100 _
b100 ;
b100 q
b10100100001010000010000000 9
b10100100001010000010000000 R
b11000 5
b11000 @
b11000 N
b100000 u
b10100000100000 0
b10100000100000 S
b10100000100000 m
b10100000100000 o
b10100000100000 n
b101 Z
b101001000010100000100000 Q
b11000 4
b11000 J
b11000 O
b1010000010011000 I
b1010000010011000 .
b1010000010011000 L
b101001000010100000100000 1
b101001000010100000100000 V
b11000 F
b11000 +
b11000 G
b11000 K
b10100 C
b10100 *
b10100 D
b10100 U
1/
#60
b1011 %"
0/
#65
b10000 2
b10000 \
b10000 {
b100 6
b100 k
b100 r
b10000 s
b10000 #
b10000 w
b10000 |
b1100111000000000000010000 P
b11100 3
b11100 ?
b11100 B
b10000 8
b10000 H
b10000 T
b0 b
b0 "
b0 t
1g
1(
1c
1$
0i
0,
0j
0-
b11 `
b11 <
b11 l
b11 y
b1100 _
b1100 ;
b1100 q
b111 7
b111 W
b111 ]
b1100111000000000000010000 9
b1100111000000000000010000 R
b11100 5
b11100 @
b11100 N
b100 u
b100 0
b100 S
b100 m
b100 o
b100 n
b101011 a
b111 [
b11 Z
b0 Y
b111 X
b11001110000000000000100 Q
b11100 4
b11100 J
b11100 O
b101100 I
b101100 .
b101100 L
b10101100011001110000000000000100 1
b10101100011001110000000000000100 V
b11100 F
b11100 +
b11100 G
b11100 K
b11000 C
b11000 *
b11000 D
b11000 U
1/
#70
b11 P"
b11 :
b11 x
b11 }
0/
#75
b10010 2
b10010 \
b10010 {
b10010 s
b0 :
b0 x
b0 }
b10010 #
b10010 w
b10010 |
b10100100000110000010000000 P
b100000 3
b100000 ?
b100000 B
b110000010000000 8
b110000010000000 H
b110000010000000 T
b111 6
b111 k
b111 r
b10 b
b10 "
b10 t
0g
0(
0c
0$
1i
1,
1j
1-
b111 `
b111 <
b111 l
b111 y
b1011 _
b1011 ;
b1011 q
b11 7
b11 W
b11 ]
b10100100000110000010000000 9
b10100100000110000010000000 R
b100000 5
b100000 @
b100000 N
b100000 u
b1100000100000 0
b1100000100000 S
b1100000100000 m
b1100000100000 o
b1100000100000 n
b0 a
b100 [
b101 Z
b11 Y
b100 X
b101001000001100000100000 Q
b100000 4
b100000 J
b100000 O
b110000010100000 I
b110000010100000 .
b110000010100000 L
b101001000001100000100000 1
b101001000001100000100000 V
b100000 F
b100000 +
b100000 G
b100000 K
b11100 C
b11100 *
b11100 D
b11100 U
1/
#80
b10010 #"
0/
#85
b11 :
b11 x
b11 }
b11 2
b11 \
b11 {
b10000 6
b10000 k
b10000 r
b10000 s
b10000 #
b10000 w
b10000 |
b10000000000001000000 P
b100100 3
b100100 ?
b100100 B
b1000000 8
b1000000 H
b1000000 T
b0 b
b0 "
b0 t
1h
1)
1c
1$
0i
0,
b101 `
b101 <
b101 l
b101 y
b0 _
b0 ;
b0 q
b10 7
b10 W
b10 ]
b10000000000001000000 9
b10000000000001000000 R
b100100 5
b100100 @
b100100 N
b10000 u
b10000 0
b10000 S
b10000 m
b10000 o
b10000 n
b100011 a
b10 [
b0 Z
b0 Y
b10 X
b100000000000010000 Q
b100100 4
b100100 J
b100100 O
b1100100 I
b1100100 .
b1100100 L
b10001100000000100000000000010000 1
b10001100000000100000000000010000 V
b100100 F
b100100 +
b100100 G
b100100 K
b100000 C
b100000 *
b100000 D
b100000 U
1/
#90
b11 ""
0/
#95
b1000 2
b1000 \
b1000 {
b1000 s
b0 :
b0 x
b0 }
b1000 #
b1000 w
b1000 |
b10100111000000000000011100 P
b101000 3
b101000 ?
b101000 B
b110 v
b110 !
b110 p
b11100 8
b11100 H
b11100 T
b11 6
b11 k
b11 r
b1 b
b1 "
b1 t
0h
0)
1d
1%
0c
0$
0j
0-
b11 `
b11 <
b11 l
b11 y
b1011 _
b1011 ;
b1011 q
b111 7
b111 W
b111 ]
b10100111000000000000011100 9
b10100111000000000000011100 R
b101000 5
b101000 @
b101000 N
b111 u
b111 0
b111 S
b111 m
b111 o
b111 n
b100 a
b111 [
b101 Z
b111 X
b101001110000000000000111 Q
b101000 4
b101000 J
b101000 O
b1000100 I
b1000100 .
b1000100 L
b10000101001110000000000000111 1
b10000101001110000000000000111 V
b101000 F
b101000 +
b101000 G
b101000 K
b100100 C
b100100 *
b100100 D
b100100 U
1/
#100
0/
#105
b0 2
b0 \
b0 {
b111 6
b111 k
b111 r
b0 s
1>
b0 #
b0 w
b0 |
b1100100001000000010101000 P
b101100 3
b101100 ?
b101100 B
b111 v
b111 !
b111 p
b1000000010101000 8
b1000000010101000 H
b1000000010101000 T
b10 b
b10 "
b10 t
0d
0%
1i
1,
1j
1-
b111 `
b111 <
b111 l
b111 y
b10010 _
b10010 ;
b10010 q
b100 7
b100 W
b100 ]
b1100100001000000010101000 9
b1100100001000000010101000 R
b101100 5
b101100 @
b101100 N
b101010 u
b10000000101010 0
b10000000101010 S
b10000000101010 m
b10000000101010 o
b10000000101010 n
b0 a
b100 [
b11 Z
b100 Y
b100 X
b11001000010000000101010 Q
b101100 4
b101100 J
b101100 O
b1000000011010100 I
b1000000011010100 .
b1000000011010100 L
b11001000010000000101010 1
b11001000010000000101010 V
b101100 F
b101100 +
b101100 G
b101100 K
b101000 C
b101000 *
b101000 D
b101000 U
1/
#110
b0 $"
0/
#115
1M
b0 2
b0 \
b0 {
b0 6
b0 k
b0 r
b0 s
1>
b0 :
b0 x
b0 }
b0 #
b0 w
b0 |
b10000000000000000000000100 P
b110100 3
b110100 ?
b110100 B
b110 v
b110 !
b110 p
b100 8
b100 H
b100 T
b1 b
b1 "
b1 t
1d
1%
0i
0,
0j
0-
b0 `
b0 <
b0 l
b0 y
b0 _
b0 ;
b0 q
b0 7
b0 W
b0 ]
b10000000000000000000000100 9
b10000000000000000000000100 R
b110100 5
b110100 @
b110100 N
b1 u
b1 0
b1 S
b1 m
b1 o
b1 n
b100 a
b0 [
b100 Z
b0 Y
b0 X
b100000000000000000000001 Q
b110100 4
b110100 J
b110100 O
b110100 I
b110100 .
b110100 L
b10000100000000000000000000001 1
b10000100000000000000000000001 V
b110000 F
b110000 +
b110000 G
b110000 K
b101100 C
b101100 *
b101100 D
b101100 U
1/
#120
0/
#125
b111000 3
b111000 ?
b111000 B
0M
b11 6
b11 k
b11 r
b11100010001000000010101000 P
b111000 5
b111000 @
b111000 N
b111 v
b111 !
b111 p
b1000000010101000 8
b1000000010101000 H
b1000000010101000 T
b10 b
b10 "
b10 t
0d
0%
1i
1,
1j
1-
b11 `
b11 <
b11 l
b11 y
b11 _
b11 ;
b11 q
b100 7
b100 W
b100 ]
b11100010001000000010101000 9
b11100010001000000010101000 R
b111000 4
b111000 J
b111000 O
b101010 u
b10000000101010 0
b10000000101010 S
b10000000101010 m
b10000000101010 o
b10000000101010 n
b0 a
b10 [
b111 Z
b100 Y
b10 X
b111000100010000000101010 Q
b1000000011100000 I
b1000000011100000 .
b1000000011100000 L
b111000100010000000101010 1
b111000100010000000101010 V
b111000 F
b111000 +
b111000 G
b111000 K
b110100 C
b110100 *
b110100 D
b110100 U
1/
#130
b0 $"
0/
#135
b1011 2
b1011 \
b1011 {
b1011 6
b1011 k
b1011 r
b1011 s
0>
b1011 #
b1011 w
b1011 |
b10000101001110000010000000 P
b111100 3
b111100 ?
b111100 B
b10 v
b10 !
b10 p
b1110000010000000 8
b1110000010000000 H
b1110000010000000 T
b1011 `
b1011 <
b1011 l
b1011 y
b0 _
b0 ;
b0 q
b111 7
b111 W
b111 ]
b10000101001110000010000000 9
b10000101001110000010000000 R
b111100 5
b111100 @
b111100 N
b100000 u
b11100000100000 0
b11100000100000 S
b11100000100000 m
b11100000100000 o
b11100000100000 n
b101 [
b100 Z
b111 Y
b101 X
b100001010011100000100000 Q
b111100 4
b111100 J
b111100 O
b1110000010111100 I
b1110000010111100 .
b1110000010111100 L
b100001010011100000100000 1
b100001010011100000100000 V
b111100 F
b111100 +
b111100 G
b111100 K
b111000 C
b111000 *
b111000 D
b111000 U
1/
#140
b1011 '"
0/
#145
b1000 2
b1000 \
b1000 {
b11 6
b11 k
b11 r
b1000 s
0>
b1000 #
b1000 w
b1000 |
b11100010001110000010001000 P
b1000000 3
b1000000 ?
b1000000 B
b110 v
b110 !
b110 p
b1110000010001000 8
b1110000010001000 H
b1110000010001000 T
b11 `
b11 <
b11 l
b11 y
b1011 _
b1011 ;
b1011 q
b11100010001110000010001000 9
b11100010001110000010001000 R
b1000000 5
b1000000 @
b1000000 N
b100010 u
b11100000100010 0
b11100000100010 S
b11100000100010 m
b11100000100010 o
b11100000100010 n
b10 [
b111 Z
b10 X
b111000100011100000100010 Q
b1000000 4
b1000000 J
b1000000 O
b1110000011001000 I
b1110000011001000 .
b1110000011001000 L
b111000100011100000100010 1
b111000100011100000100010 V
b1000000 F
b1000000 +
b1000000 G
b1000000 K
b111100 C
b111100 *
b111100 D
b111100 U
1/
#150
b1000 '"
0/
#155
1>
b0 2
b0 \
b0 {
b0 6
b0 k
b0 r
b0 s
b0 #
b0 w
b0 |
b0 P
b0 3
b0 ?
b0 B
b10 v
b10 !
b10 p
b0 8
b0 H
b0 T
1e
1&
b0 b
b0 "
b0 t
0i
0,
0j
0-
b0 `
b0 <
b0 l
b0 y
b0 _
b0 ;
b0 q
b0 7
b0 W
b0 ]
b0 9
b0 R
b0 5
b0 @
b0 N
b0 u
b0 0
b0 S
b0 m
b0 o
b0 n
b10 a
b0 [
b0 Z
b0 Y
b0 X
b0 Q
b1000100 4
b1000100 J
b1000100 O
b1000100 I
b1000100 .
b1000100 L
b1000000000000000000000000000 1
b1000000000000000000000000000 V
b1000100 F
b1000100 +
b1000100 G
b1000100 K
b1000000 C
b1000000 *
b1000000 D
b1000000 U
1/
#160
0/
#165
b101 2
b101 \
b101 {
b100 3
b100 ?
b100 B
b101 s
0>
b101 #
b101 w
b101 |
b100 5
b100 @
b100 N
b101 6
b101 k
b101 r
b10000000000000010100 P
b10100 8
b10100 H
b10100 T
0e
0&
1c
1$
1j
1-
b11 `
b11 <
b11 l
b11 y
b10 7
b10 W
b10 ]
b10000000000000010100 9
b10000000000000010100 R
b101 u
b101 0
b101 S
b101 m
b101 o
b101 n
b1000 a
b10 [
b10 X
b100000000000000101 Q
b100 4
b100 J
b100 O
b11000 I
b11000 .
b11000 L
b100000000000100000000000000101 1
b100000000000100000000000000101 V
b100 F
b100 +
b100 G
b100 K
b0 C
b0 *
b0 D
b0 U
1/
#170
b101 ""
0/
#175
b1100 2
b1100 \
b1100 {
b1100 s
b1100 #
b1100 w
b1100 |
b11000000000000110000 P
b1000 3
b1000 ?
b1000 B
b110000 8
b110000 H
b110000 T
b1100 6
b1100 k
b1100 r
b10010 `
b10010 <
b10010 l
b10010 y
b11 7
b11 W
b11 ]
b11000000000000110000 9
b11000000000000110000 R
b1000 5
b1000 @
b1000 N
b1100 u
b1100 0
b1100 S
b1100 m
b1100 o
b1100 n
b11 [
b11 X
b110000000000001100 Q
b1000 4
b1000 J
b1000 O
b111000 I
b111000 .
b111000 L
b100000000000110000000000001100 1
b100000000000110000000000001100 V
b1000 F
b1000 +
b1000 G
b1000 K
b100 C
b100 *
b100 D
b100 U
1/
#180
b1100 #"
0/
#185
b11 2
b11 \
b11 {
b11 s
b11 #
b11 w
b11 |
b1100111111111111111011100 P
b1100 3
b1100 ?
b1100 B
b11111111111111111111111111011100 8
b11111111111111111111111111011100 H
b11111111111111111111111111011100 T
b11111111111111111111111111110111 6
b11111111111111111111111111110111 k
b11111111111111111111111111110111 r
b1000 `
b1000 <
b1000 l
b1000 y
b1100 _
b1100 ;
b1100 q
b111 7
b111 W
b111 ]
b1100111111111111111011100 9
b1100111111111111111011100 R
b1100 5
b1100 @
b1100 N
b110111 u
b11111111111111111111111111110111 0
b11111111111111111111111111110111 S
b11111111111111111111111111110111 m
b11111111111111111111111111110111 o
b1111111111110111 n
b111 [
b11 Z
b11111 Y
b111 X
b11001111111111111110111 Q
b1100 4
b1100 J
b1100 O
b11111111111111111111111111101000 I
b11111111111111111111111111101000 .
b11111111111111111111111111101000 L
b100000011001111111111111110111 1
b100000011001111111111111110111 V
b1100 F
b1100 +
b1100 G
b1100 K
b1000 C
b1000 *
b1000 D
b1000 U
1/
#190
b11 '"
0/
#195
b111 2
b111 \
b111 {
b111 s
b111 #
b111 w
b111 |
b11100010001000000010010100 P
b10000 3
b10000 ?
b10000 B
b1 v
b1 !
b1 p
b1000000010010100 8
b1000000010010100 H
b1000000010010100 T
b101 6
b101 k
b101 r
b10 b
b10 "
b10 t
0c
0$
1i
1,
b101 `
b101 <
b101 l
b101 y
b11 _
b11 ;
b11 q
b100 7
b100 W
b100 ]
b11100010001000000010010100 9
b11100010001000000010010100 R
b10000 5
b10000 @
b10000 N
b100101 u
b10000000100101 0
b10000000100101 S
b10000000100101 m
b10000000100101 o
b10000000100101 n
b0 a
b10 [
b111 Z
b100 Y
b10 X
b111000100010000000100101 Q
b10000 4
b10000 J
b10000 O
b1000000010100100 I
b1000000010100100 .
b1000000010100100 L
b111000100010000000100101 1
b111000100010000000100101 V
b10000 F
b10000 +
b10000 G
b10000 K
b1100 C
b1100 *
b1100 D
b1100 U
1/
#200
b111 $"
0/
#205
b100 2
b100 \
b100 {
b111 6
b111 k
b111 r
b100 s
b100 #
b100 w
b100 |
b1100100001010000010010000 P
b10100 3
b10100 ?
b10100 B
b0 v
b0 !
b0 p
b1010000010010000 8
b1010000010010000 H
b1010000010010000 T
b111 `
b111 <
b111 l
b111 y
b1100 _
b1100 ;
b1100 q
b101 7
b101 W
b101 ]
b1100100001010000010010000 9
b1100100001010000010010000 R
b10100 5
b10100 @
b10100 N
b100100 u
b10100000100100 0
b10100000100100 S
b10100000100100 m
b10100000100100 o
b10100000100100 n
b100 [
b11 Z
b101 Y
b100 X
b11001000010100000100100 Q
b10100 4
b10100 J
b10100 O
b1010000010100100 I
b1010000010100100 .
b1010000010100100 L
b11001000010100000100100 1
b11001000010100000100100 V
b10100 F
b10100 +
b10100 G
b10100 K
b10000 C
b10000 *
b10000 D
b10000 U
1/
#210
b100 %"
0/
#215
b1011 2
b1011 \
b1011 {
b1011 s
b1011 #
b1011 w
b1011 |
b10100100001010000010000000 P
b11000 3
b11000 ?
b11000 B
b10 v
b10 !
b10 p
b1010000010000000 8
b1010000010000000 H
b1010000010000000 T
b100 _
b100 ;
b100 q
b10100100001010000010000000 9
b10100100001010000010000000 R
b11000 5
b11000 @
b11000 N
b100000 u
b10100000100000 0
b10100000100000 S
b10100000100000 m
b10100000100000 o
b10100000100000 n
b101 Z
b101001000010100000100000 Q
b11000 4
b11000 J
b11000 O
b1010000010011000 I
b1010000010011000 .
b1010000010011000 L
b101001000010100000100000 1
b101001000010100000100000 V
b11000 F
b11000 +
b11000 G
b11000 K
b10100 C
b10100 *
b10100 D
b10100 U
1/
#220
b1011 %"
0/
